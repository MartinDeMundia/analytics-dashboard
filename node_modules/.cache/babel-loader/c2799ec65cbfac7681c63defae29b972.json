{"ast":null,"code":"var _jsxFileName = \"D:\\\\Developers\\\\Git SVN\\\\React-GraphQL\\\\analytics-dashboard\\\\src\\\\components\\\\VisualsGraphs.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, gql } from '@apollo/client';\nimport StaffSection from './../components/StaffSection';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BarChart, Bar, Cell } from 'recharts';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport FootfallChart from './../components/FootfallChart';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = scaleOrdinal(schemeCategory10).range();\nconst data_revenue = [{\n  name: 'Jan',\n  revenue: 4000\n}, {\n  name: 'Feb',\n  revenue: 3000\n}, {\n  name: 'Mar',\n  revenue: 2000\n}, {\n  name: 'Apr',\n  revenue: 2780\n}, {\n  name: 'May',\n  revenue: 1890\n}, {\n  name: 'Jun',\n  revenue: 2390\n}, {\n  name: 'Jul',\n  revenue: 3490\n}];\n\nconst getPath = (x, y, width, height) => `M${x},${y + height}\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${x + width / 2}, ${y}\n          C${x + width / 2},${y + height / 3} ${x + 2 * width / 3},${y + height} ${x + width}, ${y + height}\n          Z`;\n\nconst TriangleBar = props => {\n  const {\n    fill,\n    x,\n    y,\n    width,\n    height\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"path\", {\n    d: getPath(x, y, width, height),\n    stroke: \"none\",\n    fill: fill\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, this);\n};\n\n_c = TriangleBar;\nTriangleBar.propTypes = {\n  fill: PropTypes.string,\n  x: PropTypes.number,\n  y: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number\n};\nconst STAFF_QUERY = gql`\n{\n    staff {\n      id\n      staff_name\n      efficiency_d1\n      efficiency_d2\n      nps_d1\n      nps_d2\n      efficiency\n      reported_Issues\n      location {\n        id\n        location\n      }\n    }\n  }  \n`;\nconst FOOTFALL_QUERY = gql`\n{\n    footfall {\n      id\n      name\n      amnt\n    }\n  } \n`;\n\nconst VisualsGraphs = () => {\n  _s();\n\n  var {\n    data\n  } = useQuery(STAFF_QUERY);\n  const data_staff = data;\n  var {\n    data\n  } = useQuery(FOOTFALL_QUERY);\n  const data_footfall = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"col-lg-6 col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-header d-flex justify-content-between align-items-end\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Foot fall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-content\",\n          children: data_footfall && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(FootfallChart, {\n              dbObject: data_footfall.footfall\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"col-lg-6 col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-header d-flex justify-content-between pb-0\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"card-title\",\n            children: \"Revenue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body py-0 chart_container\",\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              width: 500,\n              height: 300,\n              data: data_revenue,\n              margin: {\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5\n              },\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"revenue\",\n                fill: \"#8884d8\",\n                shape: /*#__PURE__*/_jsxDEV(TriangleBar, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 74\n                }, this),\n                label: {\n                  position: 'top'\n                },\n                children: data_revenue.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: colors[index % 20]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 33\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"col-lg-12 col-md-6 col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              class: \"table text-center m-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Staff Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Efficiency Delta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"NPS Delta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Efficiency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Reported Issues\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 15\n              }, this), data_staff && /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: data_staff.staff.map(dbObject => /*#__PURE__*/_jsxDEV(StaffSection, {\n                  dbObject: dbObject\n                }, dbObject.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}; //gg\n\n\n_s(VisualsGraphs, \"2BzZmmtwwwbIDe6twkYfzbmmFFk=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c2 = VisualsGraphs;\nexport default VisualsGraphs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TriangleBar\");\n$RefreshReg$(_c2, \"VisualsGraphs\");","map":{"version":3,"sources":["D:/Developers/Git SVN/React-GraphQL/analytics-dashboard/src/components/VisualsGraphs.js"],"names":["useQuery","gql","StaffSection","React","PropTypes","BarChart","Bar","Cell","scaleOrdinal","schemeCategory10","FootfallChart","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ReferenceLine","colors","range","data_revenue","name","revenue","getPath","x","y","width","height","TriangleBar","props","fill","propTypes","string","number","STAFF_QUERY","FOOTFALL_QUERY","VisualsGraphs","data","data_staff","data_footfall","footfall","top","right","left","bottom","position","map","entry","index","staff","dbObject","id"],"mappings":"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","sourcesContent":["import { useQuery, gql } from '@apollo/client';\r\nimport StaffSection from './../components/StaffSection';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BarChart, Bar, Cell } from 'recharts';\r\nimport { scaleOrdinal } from 'd3-scale';\r\nimport { schemeCategory10 } from 'd3-scale-chromatic';\r\n\r\nimport FootfallChart from './../components/FootfallChart';\r\n\r\n\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend,\r\n    ReferenceLine,    \r\n  } from 'recharts';\r\n  \r\n\r\n  const colors = scaleOrdinal(schemeCategory10).range();\r\n\r\n\r\n\r\n\r\n\r\n  const data_revenue = [\r\n    {\r\n      name: 'Jan',\r\n      revenue: 4000\r\n    },\r\n    {\r\n      name: 'Feb',\r\n      revenue: 3000\r\n    },\r\n    {\r\n      name: 'Mar',\r\n      revenue: 2000\r\n    },\r\n    {\r\n      name: 'Apr',\r\n      revenue: 2780\r\n    },\r\n    {\r\n      name: 'May',\r\n      revenue: 1890\r\n    },\r\n    {\r\n      name: 'Jun',\r\n      revenue: 2390\r\n    },\r\n    {\r\n      name: 'Jul',\r\n      revenue: 3490\r\n    },\r\n  ];\r\n\r\nconst getPath = (x, y, width, height) => `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${x + width / 2}, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y + height} ${x + width}, ${y + height}\r\n          Z`;\r\n\r\nconst TriangleBar = (props) => {\r\n  const { fill, x, y, width, height } = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\r\n};\r\n\r\nTriangleBar.propTypes = {\r\n  fill: PropTypes.string,\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n\r\n\r\n\r\nconst STAFF_QUERY = gql`\r\n{\r\n    staff {\r\n      id\r\n      staff_name\r\n      efficiency_d1\r\n      efficiency_d2\r\n      nps_d1\r\n      nps_d2\r\n      efficiency\r\n      reported_Issues\r\n      location {\r\n        id\r\n        location\r\n      }\r\n    }\r\n  }  \r\n`;\r\n\r\nconst FOOTFALL_QUERY = gql`\r\n{\r\n    footfall {\r\n      id\r\n      name\r\n      amnt\r\n    }\r\n  } \r\n`;\r\n\r\n\r\nconst VisualsGraphs = () => {\r\nvar { data } = useQuery(STAFF_QUERY);\r\nconst  data_staff = data;\r\n\r\nvar { data } = useQuery(FOOTFALL_QUERY);\r\nconst  data_footfall = data;\r\n\r\n return (   \r\n    <div class=\"row\">\r\n    <div class=\"col-lg-6 col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header d-flex justify-content-between align-items-end\">\r\n                <h4>Foot fall</h4>\r\n              \r\n            </div>\r\n\r\n\r\n            <div class=\"card-content\"> \r\n                {data_footfall && (\r\n                <span>\r\n                     <FootfallChart  dbObject={data_footfall.footfall} />              \r\n                </span>\r\n                )}\r\n\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-lg-6 col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header d-flex justify-content-between pb-0\">\r\n                <h4 class=\"card-title\">Revenue</h4>                                  \r\n            </div>\r\n            <div class=\"card-content\">\r\n                <div class=\"card-body py-0 chart_container\">\r\n                        <BarChart\r\n                            width={500}\r\n                            height={300}\r\n                            data={data_revenue}\r\n                            margin={{\r\n                                top: 20,\r\n                                right: 30,\r\n                                left: 20,\r\n                                bottom: 5,\r\n                            }}\r\n                            >\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"name\" />\r\n                            <YAxis />\r\n                            <Tooltip />\r\n                            <Legend />\r\n                            <Bar dataKey=\"revenue\" fill=\"#8884d8\" shape={<TriangleBar />} label={{ position: 'top' }}>\r\n                                {data_revenue.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={colors[index % 20]} />\r\n                                ))}\r\n                            </Bar>\r\n                        </BarChart>\r\n                </div>                             \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <div class=\"col-lg-12 col-md-6 col-12\">\r\n                <div class=\"card\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n         <div class=\"card-content\">\r\n          <div class=\"card-body table-responsive\">\r\n            <table class=\"table text-center m-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th>No</th>\r\n                  <th>Staff Name</th>\r\n                  <th>Efficiency Delta</th>\r\n                  <th>NPS Delta</th>\r\n                  <th>Efficiency</th>\r\n                  <th>Reported Issues</th>             \r\n                </tr>\r\n              </thead>            \r\n              {data_staff && (\r\n                    <tbody>\r\n                    {data_staff.staff.map((dbObject) => (\r\n                        <StaffSection key={dbObject.id} dbObject={dbObject} />\r\n                    ))}\r\n                    </tbody>\r\n                )} \r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n     </div>\r\n    </div>\r\n</div>\r\n);\r\n};\r\n//gg\r\n\r\nexport default VisualsGraphs;"]},"metadata":{},"sourceType":"module"}