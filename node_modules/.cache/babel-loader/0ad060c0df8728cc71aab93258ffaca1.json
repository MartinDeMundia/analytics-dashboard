{"ast":null,"code":"import _objectSpread from\"D:/Developers/Git SVN/React-GraphQL/analytics-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import ReactDOM from'react-dom';import'./styles/index.css';import App from'./components/App';import{ApolloClient}from'@apollo/client';import{setContext}from'@apollo/client/link/context';import{ApolloProvider,createHttpLink,InMemoryCache}from'@apollo/client';import{jsx as _jsx}from\"react/jsx-runtime\";var httpLink=createHttpLink({uri:'http://192.168.100.16:4000'});var AUTH_TOKEN='auth-token';var authLink=setContext(function(_,_ref){var headers=_ref.headers;var token=localStorage.getItem(AUTH_TOKEN);return{headers:_objectSpread(_objectSpread({},headers),{},{authorization:token?\"Bearer \".concat(token):''})};});var client=new ApolloClient({link:authLink.concat(httpLink),cache:new InMemoryCache()});ReactDOM.render(/*#__PURE__*/_jsx(ApolloProvider,{client:client,children:/*#__PURE__*/_jsx(App,{})}),document.getElementById('root'));","map":{"version":3,"sources":["D:/Developers/Git SVN/React-GraphQL/analytics-dashboard/src/index.js"],"names":["React","ReactDOM","App","ApolloClient","setContext","ApolloProvider","createHttpLink","InMemoryCache","httpLink","uri","AUTH_TOKEN","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","render","document","getElementById"],"mappings":"6KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,oBAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,UAAT,KAA2B,6BAA3B,CACA,OACEC,cADF,CAEEC,cAFF,CAGEC,aAHF,KAIO,gBAJP,C,2CAMA,GAAMC,CAAAA,QAAQ,CAAGF,cAAc,CAAC,CAC9BG,GAAG,CAAE,4BADyB,CAAD,CAA/B,CAGA,GAAMC,CAAAA,UAAU,CAAG,YAAnB,CACA,GAAMC,CAAAA,QAAQ,CAAGP,UAAU,CAAC,SAACQ,CAAD,MAAoB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAC9C,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqBN,UAArB,CAAd,CACA,MAAO,CACLG,OAAO,gCACFA,OADE,MAELI,aAAa,CAAEH,KAAK,kBAAaA,KAAb,EAAuB,EAFtC,EADF,CAAP,CAMD,CAR0B,CAA3B,CASA,GAAMI,CAAAA,MAAM,CAAG,GAAIf,CAAAA,YAAJ,CAAiB,CAC9BgB,IAAI,CAAER,QAAQ,CAACS,MAAT,CAAgBZ,QAAhB,CADwB,CAE9Ba,KAAK,CAAE,GAAId,CAAAA,aAAJ,EAFuB,CAAjB,CAAf,CAKAN,QAAQ,CAACqB,MAAT,cACE,KAAC,cAAD,EAAgB,MAAM,CAAEJ,MAAxB,uBACE,KAAC,GAAD,IADF,EADF,CAIEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css'\nimport App from './components/App'\nimport { ApolloClient } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport {\n  ApolloProvider,\n  createHttpLink,\n  InMemoryCache\n} from '@apollo/client';\n\nconst httpLink = createHttpLink({\n  uri: 'http://192.168.100.16:4000', \n})\nconst AUTH_TOKEN = 'auth-token'\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(AUTH_TOKEN)\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  }\n})\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}